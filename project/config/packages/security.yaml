security:

    password_hashers:
        App\Entity\CompteVoyageur:
            algorithm: auto
        App\Entity\Gerant:
            algorithm: auto

    providers:
        compte_voyageur_provider:
            entity:
                class: App\Entity\CompteVoyageur
                property: login
        gerant_provider:
            entity:
                class: App\Entity\Gerant
                property: email

        chain_provider:
            chain:
                providers: [gerant_provider, compte_voyageur_provider]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        client_login:
            pattern: ^/api/client/login
            stateless: true
            provider: compte_voyageur_provider
            json_login:
                check_path: /api/client/login
                username_path: login
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        gerant_login:
            pattern: ^/api/gerant/login
            stateless: true
            provider: gerant_provider
            json_login:
                check_path: /api/gerant/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            provider: chain_provider
            jwt: ~

    access_control:
        - { path: ^/api/doc, roles: PUBLIC_ACCESS }
        - { path: ^/api/client/login, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

